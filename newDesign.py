# -*- coding: utf-8 -*-
import os

# Form implementation generated from reading ui file 'deneme.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import res
from custom_button import GlowButton, redButton, cizgiButton, profilButton, portButton, red1Button
import sys

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        icon_path = os.path.join(os.path.dirname(__file__), "assets", "icon.ico")
        MainWindow.setWindowIcon(QtGui.QIcon(icon_path))
        MainWindow.setWindowIcon(QtGui.QIcon(icon_path))
        MainWindow.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        MainWindow.resize(1920, 1080)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.backgroundImage_label = QtWidgets.QLabel(self.centralwidget)
        self.backgroundImage_label.setGeometry(QtCore.QRect(0, 0, 1920, 1080))
        self.backgroundImage_label.setStyleSheet("background-image:url(:/images/assets/background main.png);")
        self.backgroundImage_label.setText("")
        self.backgroundImage_label.setObjectName("backgroundImage_label")
        self.bodyDetectedShown_label = QtWidgets.QLabel(self.centralwidget)
        self.bodyDetectedShown_label.setGeometry(QtCore.QRect(77, 180, 191, 123))
        self.bodyDetectedShown_label.setStyleSheet("background-color: transparent;")
        self.bodyDetectedShown_label.setText("")
        self.bodyDetectedShown_label.setObjectName("bodyDetectedShown_label")
        self.woundDetectedShown_label = QtWidgets.QLabel(self.centralwidget)
        self.woundDetectedShown_label.setGeometry(QtCore.QRect(77, 370, 191, 123))
        self.woundDetectedShown_label.setStyleSheet("background-color: transparent;")
        self.woundDetectedShown_label.setText("")
        self.woundDetectedShown_label.setObjectName("woundDetectedShown_label")
        self.fireDetectedShown_label = QtWidgets.QLabel(self.centralwidget)
        self.fireDetectedShown_label.setGeometry(QtCore.QRect(75, 556, 191, 123))
        self.fireDetectedShown_label.setStyleSheet("background-color: transparent;")
        self.fireDetectedShown_label.setText("")
        self.fireDetectedShown_label.setObjectName("fireDetectedShown_label")
        self.cameraShown_label = QtWidgets.QLabel(self.centralwidget)
        self.cameraShown_label.setGeometry(QtCore.QRect(420, 190, 872, 453))
        self.cameraShown_label.setStyleSheet("background-color: transparent;")
        self.cameraShown_label.setText("")
        self.cameraShown_label.setObjectName("cameraShown_label")
        self.mapShown_label = QtWidgets.QLabel(self.centralwidget)
        self.mapShown_label.setGeometry(QtCore.QRect(270, 750, 761, 283))
        self.mapShown_label.setStyleSheet("background-color: transparent;")
        self.mapShown_label.setText("")
        self.mapShown_label.setObjectName("mapShown_label")
        self.addMarker_pushButton = GlowButton("", self.centralwidget)
        self.addMarker_pushButton.setGeometry(QtCore.QRect(22, 727, 101, 31))
        self.addMarker_pushButton.setStyleSheet("background-color: transparent;\n"
"")
        self.addMarker_pushButton.setText("")
        self.addMarker_pushButton.setObjectName("addMarker_pushButton")
        self.clearMarker_pushButton = GlowButton("", self.centralwidget)
        self.clearMarker_pushButton.setGeometry(QtCore.QRect(132, 728, 101, 31))
        self.clearMarker_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.clearMarker_pushButton.setStyleSheet("background-color: transparent;")
        self.clearMarker_pushButton.setText("")
        self.clearMarker_pushButton.setObjectName("clearMarker_pushButton")
        self.clearPath_pushButton = GlowButton("", self.centralwidget)
        self.clearPath_pushButton.setGeometry(QtCore.QRect(22, 770, 101, 31))
        self.clearPath_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.clearPath_pushButton.setStyleSheet("background-color: transparent;")
        self.clearPath_pushButton.setText("")
        self.clearPath_pushButton.setObjectName("clearPath_pushButton")
        self.goToFocus_pushButton = GlowButton("", self.centralwidget)
        self.goToFocus_pushButton.setGeometry(QtCore.QRect(132, 770, 101, 31))
        self.goToFocus_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.goToFocus_pushButton.setStyleSheet("background-color: transparent;")
        self.goToFocus_pushButton.setText("")
        self.goToFocus_pushButton.setObjectName("goToFocus_pushButton")
        self.loadMission_pushButton = GlowButton("", self.centralwidget)
        self.loadMission_pushButton.raise_()
        self.loadMission_pushButton.setGeometry(QtCore.QRect(22, 810, 101, 31))
        self.loadMission_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        # rgba formatında, alfa değeri 0 ile 1 arasında; 0.01 gibi çok düşük bir değer neredeyse şeffaf demektir.
        self.loadMission_pushButton.setStyleSheet("background-color: transparent;")
        self.loadMission_pushButton.setText("")
        self.loadMission_pushButton.setObjectName("loadMission_pushButton")

        self.saveMission_pushButton = GlowButton("", self.centralwidget)
        self.saveMission_pushButton.setGeometry(QtCore.QRect(132, 810, 101, 31))
        self.saveMission_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.saveMission_pushButton.setStyleSheet("background-color: transparent;")
        self.saveMission_pushButton.setText("")
        self.saveMission_pushButton.setObjectName("saveMission_pushButton")
        self.downloadMission_pushButton = GlowButton("", self.centralwidget)
        self.downloadMission_pushButton.setGeometry(QtCore.QRect(22, 852, 101, 31))
        self.downloadMission_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.downloadMission_pushButton.setStyleSheet("background-color: transparent;")
        self.downloadMission_pushButton.setText("")
        self.downloadMission_pushButton.setObjectName("downloadMission_pushButton")
        self.uploadMission_pushButton = GlowButton("", self.centralwidget)
        self.uploadMission_pushButton.setGeometry(QtCore.QRect(132, 853, 101, 31))
        self.uploadMission_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.uploadMission_pushButton.setStyleSheet("background-color: transparent;")
        self.uploadMission_pushButton.setText("")
        self.uploadMission_pushButton.setObjectName("uploadMission_pushButton")
        self.clearMarker_waypoint_pushButton = GlowButton("", self.centralwidget)
        self.clearMarker_waypoint_pushButton.setGeometry(QtCore.QRect(22, 893, 101, 31))
        self.clearMarker_waypoint_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.clearMarker_waypoint_pushButton.setStyleSheet("background-color: transparent;")
        self.clearMarker_waypoint_pushButton.setText("")
        self.clearMarker_waypoint_pushButton.setObjectName("clearMarker_waypoint_pushButton")
        self.arm_pushButton = GlowButton("", self.centralwidget)
        self.arm_pushButton.setGeometry(QtCore.QRect(1413, 220, 101, 32))
        self.arm_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.arm_pushButton.setStyleSheet("background-color: transparent;")
        self.arm_pushButton.setText("")
        self.arm_pushButton.setObjectName("arm_pushButton")
        self.disarm_pushButton = GlowButton("", self.centralwidget)
        self.disarm_pushButton.setGeometry(QtCore.QRect(1538, 220, 99, 33))
        self.disarm_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.disarm_pushButton.setStyleSheet("background-color: transparent;")
        self.disarm_pushButton.setText("")
        self.disarm_pushButton.setObjectName("disarm_pushButton")
        self.takeOff_pushButton = GlowButton("", self.centralwidget)
        self.takeOff_pushButton.setGeometry(QtCore.QRect(1416, 357, 95, 31))
        self.takeOff_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.takeOff_pushButton.setStyleSheet("background-color: transparent;")
        self.takeOff_pushButton.setText("")
        self.takeOff_pushButton.setObjectName("takeOff_pushButton")
        self.land_pushButton = GlowButton("", self.centralwidget)
        self.land_pushButton.setGeometry(QtCore.QRect(1545, 357, 95, 31))
        self.land_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.land_pushButton.setStyleSheet("background-color: transparent; ")
        self.land_pushButton.setText("")
        self.land_pushButton.setObjectName("land_pushButton")
        self.changeMode_pushButton = GlowButton("", self.centralwidget)
        self.changeMode_pushButton.setGeometry(QtCore.QRect(1716, 296, 121, 34))
        self.changeMode_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.changeMode_pushButton.setStyleSheet("background-color: transparent;")
        self.changeMode_pushButton.setText("")
        self.changeMode_pushButton.setObjectName("changeMode_pushButton")
        self.snapshoot_pushButton = GlowButton("", self.centralwidget)
        self.snapshoot_pushButton.setGeometry(QtCore.QRect(1150, 160, 141, 19))
        self.snapshoot_pushButton.setStyleSheet("background-color: transparent;")
        self.snapshoot_pushButton.setText("")
        self.snapshoot_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.snapshoot_pushButton.setObjectName("snapshoot_pushButton")
        self.alt_missionLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.alt_missionLineEdit.setGeometry(QtCore.QRect(43, 963, 170, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.alt_missionLineEdit.setFont(font)
        self.alt_missionLineEdit.setStyleSheet("background-color: transparent;\n"
"border: none;\n"
"color: #ffffff;")
        self.alt_missionLineEdit.setText("")
        self.alt_missionLineEdit.setObjectName("alt_missionLineEdit")
        self.altitudeLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.altitudeLineEdit.setGeometry(QtCore.QRect(1438, 316, 181, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.altitudeLineEdit.setFont(font)
        self.altitudeLineEdit.setStyleSheet("background-color: transparent;\n"
"border: none;\n"
"color: #ffffff;")
        self.altitudeLineEdit.setText("")
        self.altitudeLineEdit.setObjectName("altitudeLineEdit")
        self.yaw_textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.yaw_textEdit.setGeometry(QtCore.QRect(1167, 743, 151, 21))
        self.yaw_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.yaw_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.yaw_textEdit.setFont(font)
        self.yaw_textEdit.setStyleSheet("background-color: transparent;\n"
"color: #ffffff;\n"
"border: none;")
        self.yaw_textEdit.setObjectName("yaw_textEdit")
        self.latitude_textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.latitude_textEdit_2.setGeometry(QtCore.QRect(1167, 824, 151, 21))
        self.latitude_textEdit_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.latitude_textEdit_2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.latitude_textEdit_2.setFont(font)
        self.latitude_textEdit_2.setStyleSheet("background-color: transparent;\n"
"color: #ffffff;\n"
"border: none;\n"
"")
        self.latitude_textEdit_2.setObjectName("latitude_textEdit_2")
        self.currentMode_textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.currentMode_textEdit.setGeometry(QtCore.QRect(1167, 903, 151, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.currentMode_textEdit.setFont(font)
        self.currentMode_textEdit.setStyleSheet("background-color: transparent;\n"
"color: #ffffff;\n"
"border: none;\n"
"")
        self.currentMode_textEdit.setObjectName("currentMode_textEdit")
        self.currentMode_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.currentMode_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pitch_textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.pitch_textEdit.setGeometry(QtCore.QRect(1442, 739, 151, 21))
        self.pitch_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pitch_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.pitch_textEdit.setFont(font)
        self.pitch_textEdit.setStyleSheet("background-color: transparent;\n"
"color: #ffffff;\n"
"border: none;")
        self.pitch_textEdit.setObjectName("pitch_textEdit")
        self.longitude_textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.longitude_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.longitude_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.longitude_textEdit.setGeometry(QtCore.QRect(1448, 821, 151, 21))
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.longitude_textEdit.setFont(font)
        self.longitude_textEdit.setStyleSheet("background-color: transparent;\n"
"color: #ffffff;\n"
"border: none;")
        self.longitude_textEdit.setObjectName("longitude_textEdit")
        self.speed_textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.speed_textEdit.setGeometry(QtCore.QRect(1450, 900, 151, 21))
        self.speed_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.speed_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.speed_textEdit.setFont(font)
        self.speed_textEdit.setStyleSheet("background-color: transparent;\n"
"color: #ffffff;\n"
"border: none;")
        self.speed_textEdit.setObjectName("speed_textEdit")
        self.roll_textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.roll_textEdit.setGeometry(QtCore.QRect(1720, 737, 151, 21))
        self.roll_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.roll_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.roll_textEdit.setFont(font)
        self.roll_textEdit.setStyleSheet("background-color: transparent;\n"
"color: #ffffff;\n"
"border: none;")
        self.roll_textEdit.setObjectName("roll_textEdit")
        self.altitude_textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.altitude_textEdit.setGeometry(QtCore.QRect(1720, 819, 151, 21))
        self.altitude_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.altitude_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.altitude_textEdit.setFont(font)
        self.altitude_textEdit.setStyleSheet("background-color: transparent;\n"
"color: #ffffff;\n"
"border: none;")
        self.altitude_textEdit.setObjectName("altitude_textEdit")
        self.hdop_textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.hdop_textEdit.setGeometry(QtCore.QRect(1725, 897, 151, 21))
        self.hdop_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.hdop_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.hdop_textEdit.setFont(font)
        self.hdop_textEdit.setStyleSheet("background-color: transparent;\n"
"color: #ffffff;\n"
"border: none;")
        self.hdop_textEdit.setObjectName("hdop_textEdit")
        self.currentState_textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.currentState_textEdit.setGeometry(QtCore.QRect(1110, 970, 771, 81))
        self.currentState_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.currentState_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.currentState_textEdit.setFont(font)
        self.currentState_textEdit.setStyleSheet("background-color: transparent;\n"
"color: #ffffff;\n"
"border: none;")
        self.currentState_textEdit.setObjectName("currentState_textEdit")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(1405, 431, 492, 244))
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setElideMode(QtCore.Qt.ElideLeft)
        self.tabWidget.setDocumentMode(True)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.tabWidget.setTabBarAutoHide(True)
        self.tabWidget.setObjectName("tabWidget")
        self.tabWidget.setStyleSheet("""
            QTabWidget::pane {
                background: transparent;
                border: #0efdfe;
            }
            QTabBar::tab {
                background: #36bbbe;
                border: #ffffff;  
                padding: 5px;  
                color: #000000; 
                border-radius: 8px;
                cursor: pointer;
            }
            QTabBar::tab:selected {
                background: #0efdfe;
                border: #0efdfe;
            }
        """)

        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.tab1_label = QtWidgets.QLabel(self.tab)
        self.tab1_label.setGeometry(QtCore.QRect(-5, 1, 496, 231))
        self.tab1_label.setStyleSheet("background-image: url(:/images/assets/ayarlar tab widget.png);")
        self.tab1_label.setText("")
        self.tab1_label.setObjectName("tab1_label")


        self.openTelemetry_pushButton = portButton("", self.tab)
        self.openTelemetry_pushButton.setGeometry(QtCore.QRect(25, 124, 71, 31))
        self.openTelemetry_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.openTelemetry_pushButton.setStyleSheet("background-color: transparent;")
        self.openTelemetry_pushButton.setText("")
        self.openTelemetry_pushButton.setObjectName("openTelemetry_pushButton")

        self.closeTelemetry_pushButton = portButton("", self.tab)
        self.closeTelemetry_pushButton.setGeometry(QtCore.QRect(114, 124, 71, 31))
        self.closeTelemetry_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.closeTelemetry_pushButton.setStyleSheet("background-color: transparent;")
        self.closeTelemetry_pushButton.setText("")
        self.closeTelemetry_pushButton.setObjectName("closeTelemetry_pushButton")

        self.openCamera_pushButton = portButton("", self.tab)
        self.openCamera_pushButton.setGeometry(QtCore.QRect(250, 188, 71, 31))
        self.openCamera_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.openCamera_pushButton.setStyleSheet("background-color: transparent;")
        self.openCamera_pushButton.setText("")
        self.openCamera_pushButton.setObjectName("openCamera_pushButton")

        self.closeCamera_pushButton = portButton("", self.tab)
        self.closeCamera_pushButton.setGeometry(QtCore.QRect(340, 188, 71, 31))
        self.closeCamera_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.closeCamera_pushButton.setStyleSheet("background-color: transparent;")
        self.closeCamera_pushButton.setText("")
        self.closeCamera_pushButton.setObjectName("closeCamera_pushButton")

        self.comPortTelemetry_comboBox = QtWidgets.QComboBox(self.tab)
        self.comPortTelemetry_comboBox.setGeometry(QtCore.QRect(19, 89, 166, 22))
        self.comPortTelemetry_comboBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.comPortTelemetry_comboBox.setStyleSheet("""
    QComboBox {
        background-color: #063f50;
        color: #ffffff;
        border: none;
    }
    QComboBox:focus {
        background-color: #063f50;
        color: #ffffff;
        border: none;
    }
    QComboBox QAbstractItemView {
        background-color: #063f50;
        color: #ffffff;
        selection-background-color: #0a5a6e;  /* seçilen item rengi */
        selection-color: #ffffff;
    }
""")
        self.comPortTelemetry_comboBox.setEditable(False)
        self.comPortTelemetry_comboBox.setFrame(False)
        self.comPortTelemetry_comboBox.setModelColumn(0)
        self.comPortTelemetry_comboBox.setObjectName("comPortTelemetry_comboBox")
        self.videoCapture_comboBox = QtWidgets.QComboBox(self.tab)
        self.videoCapture_comboBox.setGeometry(QtCore.QRect(249, 81, 166, 22))
        self.videoCapture_comboBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.videoCapture_comboBox.setStyleSheet("""
    QComboBox {
        background-color: #063f50;
        color: #ffffff;
        border: none;
    }
    QComboBox:focus {
        background-color: #063f50;
        color: #ffffff;
        border: none;
    }
    QComboBox QAbstractItemView {
        background-color: #063f50;
        color: #ffffff;
        selection-background-color: #0a5a6e;  /* seçilen item rengi */
        selection-color: #ffffff;
    }
""")
        self.videoCapture_comboBox.setFrame(False)
        self.videoCapture_comboBox.setObjectName("videoCapture_comboBox")
        self.resolution_comboBox = QtWidgets.QComboBox(self.tab)
        self.resolution_comboBox.setGeometry(QtCore.QRect(248, 142, 166, 22))
        self.resolution_comboBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.resolution_comboBox.setStyleSheet("""
    QComboBox {
        background-color: #063f50;
        color: #ffffff;
        border: none;
    }
    QComboBox:focus {
        background-color: #063f50;
        color: #ffffff;
        border: none;
    }
    QComboBox QAbstractItemView {
        background-color: #063f50;
        color: #ffffff;
        selection-background-color: #0a5a6e;  /* seçilen item rengi */
        selection-color: #ffffff;
    }
""")
        self.resolution_comboBox.setFrame(False)
        self.resolution_comboBox.setObjectName("resolution_comboBox")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label_2 = QtWidgets.QLabel(self.tab_2)
        self.label_2.setGeometry(QtCore.QRect(-4, 0, 505, 240))
        self.label_2.setStyleSheet("background-image: url(:/images/assets/log tab widget.png);")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.criticalShown_textEdit = QtWidgets.QTextEdit(self.tab_2)
        self.criticalShown_textEdit.setGeometry(QtCore.QRect(0, 10, 421, 201))
        self.criticalShown_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.criticalShown_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.criticalShown_textEdit.setStyleSheet("color: #ffffff;\n"
"background-color: transparent;\n"
"")
        self.criticalShown_textEdit.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.criticalShown_textEdit.setObjectName("criticalShown_textEdit")
        self.tabWidget.addTab(self.tab, "")
        self.tab_7 = QtWidgets.QWidget()
        self.tab_7.setObjectName("tab_7")
        self.label_3 = QtWidgets.QLabel(self.tab_7)
        self.label_3.setGeometry(QtCore.QRect(-4, 0, 505, 240))
        self.label_3.setStyleSheet("background-image: url(:/images/assets/log tab widget.png);")
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.mobileBox_textEdit = QtWidgets.QTextEdit(self.tab_7)
        self.mobileBox_textEdit.setGeometry(QtCore.QRect(0, 10, 421, 201))
        self.mobileBox_textEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.mobileBox_textEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.mobileBox_textEdit.setStyleSheet("color: #ffffff;\n"
                                                  "background-color: transparent;\n"
                                                  "")
        self.mobileBox_textEdit.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.mobileBox_textEdit.setObjectName("criticalShown_textEdit")

        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(30, 1020, 191, 31))
        self.progressBar.setStyleSheet("color: #ffffff;")
        self.progressBar.setProperty("value", 100)
        self.progressBar.setTextVisible(True)
        self.progressBar.setOrientation(QtCore.Qt.Horizontal)
        self.progressBar.setInvertedAppearance(False)
        self.progressBar.setObjectName("progressBar")


        self.tabWidget.addTab(self.tab_2, "")
        self.tabWidget.addTab(self.tab_7, "")
        self.mode_comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.mode_comboBox.setGeometry(QtCore.QRect(1692, 253, 166, 22))
        self.mode_comboBox.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.mode_comboBox.setStyleSheet("""
    QComboBox {
        background-color: #063f50;
        color: #ffffff;
        border: none;
    }
    QComboBox:focus {
        background-color: #063f50;
        color: #ffffff;
        border: none;
    }
    QComboBox QAbstractItemView {
        background-color: #063f50;
        color: #ffffff;
        selection-background-color: #0a5a6e;  /* seçilen item rengi */
        selection-color: #ffffff;
    }
""")
        self.mode_comboBox.setFrame(False)
        self.mode_comboBox.setObjectName("mode_comboBox")
        self.mode_comboBox.addItem("GUIDED")
        self.mode_comboBox.addItem("STABILIZE")
        self.mode_comboBox.addItem("AUTO")
        self.mode_comboBox.addItem("LOITER")
        self.exit_pushButton = redButton("", self.centralwidget)
        self.exit_pushButton.setGeometry(QtCore.QRect(1860, 30, 31, 31))
        self.exit_pushButton.setStyleSheet("background-color: transparent;")
        self.exit_pushButton.setText("")
        self.exit_pushButton.setObjectName("exit_pushButton")


        self.exit_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.red_pushButton = red1Button("", self.centralwidget)
        self.red_pushButton.setGeometry(QtCore.QRect(425, 152, 31, 31))
        self.red_pushButton.setStyleSheet("background-color: transparent;")
        self.red_pushButton.setText("")
        self.red_pushButton.setObjectName("red_pushButton")
        self.red_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))

        self.minimize_pushButton =cizgiButton("", self.centralwidget)
        self.minimize_pushButton.setGeometry(QtCore.QRect(1820, 30, 31, 31))
        self.minimize_pushButton.setStyleSheet("background-color: transparent;")
        self.minimize_pushButton.setText("")
        self.minimize_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.minimize_pushButton.setObjectName("minimize_pushButton")
        self.profile_pushButton = profilButton("", self.centralwidget)
        self.profile_pushButton.setGeometry(QtCore.QRect(1830, 80, 51, 41))
        self.profile_pushButton.setStyleSheet("background-color: transparent;")
        self.profile_pushButton.setText("")
        self.profile_pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.profile_pushButton.setObjectName("profile_pushButton")
        self.weather_label = QtWidgets.QLabel(self.centralwidget)
        self.weather_label.setGeometry(QtCore.QRect(1350, 62, 300, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.weather_label.setFont(font)
        self.weather_label.setStyleSheet("color: #ffffff;")
        self.weather_label.setText("")
        self.weather_label.setObjectName("weather_label")
        self.time_label = QtWidgets.QLabel(self.centralwidget)
        self.time_label.setGeometry(QtCore.QRect(1560, 65, 120, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.time_label.setFont(font)
        self.time_label.setStyleSheet("color: #ffffff;")
        self.time_label.setText("")
        self.time_label.setObjectName("time_label")
        self.date_label = QtWidgets.QLabel(self.centralwidget)
        self.date_label.setGeometry(QtCore.QRect(1680, 65, 120, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.date_label.setFont(font)
        self.date_label.setStyleSheet("color: #ffffff;")
        self.date_label.setText("")
        self.date_label.setObjectName("date_label")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget_2.setTabsClosable(False)
        self.tabWidget_2.setTabBarAutoHide(True)
        self.tabWidget_2.setGeometry(QtCore.QRect(1100, 935, 791, 121))
        self.tabWidget_2.setStyleSheet("""
            QTabWidget::pane {
                background: transparent;
                border: #0efdfe;
            }
            QTabBar::tab {
                background: #36bbbe;
                border: #ffffff; 
                padding: 5px;  
                color: #000000; 
                border-radius: 8px;
                cursor: pointer;
            }
            QTabBar::tab:selected {
                background: #0efdfe;
                border: #0efdfe;
            }
        """)
        self.tabWidget_2.setTabsClosable(False)
        self.tabWidget_2.setTabBarAutoHide(True)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.currentStateTab_label = QtWidgets.QLabel(self.tab_3)
        self.currentStateTab_label.setGeometry(QtCore.QRect(0, 1, 791, 101))
        self.currentStateTab_label.setStyleSheet("background-image: url(:/images/assets/alt tab widget.png);")
        self.currentStateTab_label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.currentStateTab_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.currentStateTab_label.setText("")
        self.currentStateTab_label.setObjectName("currentStateTab_label")
        self.currentState_textEdit_2 = QtWidgets.QTextEdit(self.tab_3)
        self.currentState_textEdit_2.setGeometry(QtCore.QRect(20, 16, 751, 71))
        self.currentState_textEdit_2.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.currentState_textEdit_2.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.currentState_textEdit_2.setStyleSheet("color: #ffffff; background-color: transparent;")
        self.currentState_textEdit_2.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.currentState_textEdit_2.setObjectName("currentState_textEdit_2")
        self.tabWidget_2.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.label = QtWidgets.QLabel(self.tab_4)
        self.label.setGeometry(QtCore.QRect(0, 1, 791, 101))
        self.label.setStyleSheet("background-image: url(:/images/assets/alt tab widget.png);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.waypoint_listWidget = QtWidgets.QListWidget(self.tab_4)
        self.waypoint_listWidget.setGeometry(QtCore.QRect(15, 15, 781, 91))
        self.waypoint_listWidget.setStyleSheet("background-color: transparent;\n"
                                               "color: #ffffff;\n"
                                               "border: none;")
        self.waypoint_listWidget.setObjectName("waypoint_listWidget")
        self.tabWidget_2.addTab(self.tab_4, "")
        self.tabWidget_2.addTab(self.tab_4, "")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.yaw_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.latitude_textEdit_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.currentMode_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.pitch_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.longitude_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.speed_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.roll_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.altitude_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.hdop_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.currentState_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Ayarlar"))
        self.criticalShown_textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Log Mesajları"))
        self.currentState_textEdit_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_3), _translate("MainWindow", "Anlık Durum"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4), _translate("MainWindow", "WP Listesi"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_7), _translate("MainWindow", "Mobil Bildirimleri"))

if __name__ == "__main__":
        app = QtWidgets.QApplication(sys.argv)
        MainWindow = QtWidgets.QMainWindow()
        ui = Ui_MainWindow()
        ui.setupUi(MainWindow)
        MainWindow.show()
        sys.exit(app.exec_())

